name: Node.js CI/CD with SonarQube, JEST, Cypress E2E, and Docker Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ["18.x"] # Choose the appropriate Node.js version

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install Frontend Dependencies
        run: npm ci
        working-directory: ./client

      - name: Install Backend Dependencies
        run: npm ci
        working-directory: ./backend

      - name: Start Backend and Frontend
        run: |
          npm start --prefix ./backend &
          npm run dev --prefix ./client &
          sleep 20

      - name: Install Cypress Dependencies
        run: npm ci
        working-directory: ./client

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./client
          browser: chrome
        env:
          CYPRESS_baseUrl: http://localhost:3000

  jest-tests:
    runs-on: ubuntu-latest

    needs: setup-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Jest Dependencies
        run: npm ci
        working-directory: ./backend

      - name: Run Jest Tests
        run: npm test
        working-directory: ./backend

  sonarqube-scan:
    runs-on: ubuntu-latest

    needs: jest-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: -X

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest

    needs: sonarqube-scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Backend Docker Image
        run: docker build -t bassmit123/backend-server:latest ./backend

      - name: Push Backend Docker Image to Docker Hub
        run: docker push bassmit123/backend-server:latest

      - name: Build Client Docker Image
        run: docker build -t bassmit123/client:latest ./client

      - name: Push Client Docker Image to Docker Hub
        run: docker push bassmit123/client:latest
